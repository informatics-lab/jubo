# Deployment
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.manager.name }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ .Values.manager.name }}
    spec:
      serviceAccountName: {{ .Values.manager.name }}
      containers:
        - image: informaticslab/singleuser-notebook:0.3.0
          command: ["python"]
          args: ["-m", "jubo.proxy"]
          #args: ["-c", "import time; time.sleep(1000)"]
          name: {{ .Values.manager.name }}
          ports:
            - containerPort: 7777
          resources:
            requests:
              cpu: 10m
              memory: 250Mi
          env:
            - name: MARK_AS_REAPABLE_LABEL
              value: {{ .Values.reaper.reapOnly.label }}
            - name: MARK_AS_REAPABLE_LABEL_VALUE
              value: {{ .Values.reaper.reapOnly.value }}
            - name: NAME_SPACE
              value: {{ .Release.Namespace }}
            - name: PYTHONPATH
              value: /home/jovyan
  
          volumeMounts:
            - name: jubomodule
              mountPath: /home/jovyan/jubo
      volumes:
        - name: jubomodule
          configMap:
            name: jubomodule

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jubomodule
data:
{{ (.Files.Glob "jubo/*.py").AsConfig | indent 2 }}
---

# Service
kind: Service
metadata:
  name: {{ .Values.manager.name }}
spec:
  ports:
    - port: 80
      targetPort: 7777
      protocol: TCP
  selector:
    app: {{ .Values.manager.name }}

---

# Ingress
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ .Values.manager.domain }}
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
  - hosts:
    - {{ .Values.manager.domain }}
    secretName: bokeh-tls
  rules:
  - host: {{ .Values.manager.domain }}
    http:
      paths:
      - path: /
        backend:
          serviceName: {{ .Values.manager.name }}
          servicePort: 80



---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.manager.name }}
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: {{ .Values.manager.name }}
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["create", "get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: {{ .Values.manager.name }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ .Values.manager.name }}
subjects:
  - kind: ServiceAccount
    name: {{ .Values.manager.name }}
    Namespace: {{ .Release.Namespace }}